<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oVkf62J3QgAAAABJRU5ErkJggg==
</value>
  </data>
</root>